;; Bar config
(include "./bar.yuck")

;;;;;;;;;;;;;
;; Widgets ;;
;;;;;;;;;;;;;

(defwidget stat_label [icon value icon_class]
  (box :orientation "h" :class "stat-label" :space-evenly "false"
    (box :class icon_class icon)
    (box :class "value-side" value)
  )
)

(defwidget sliders_side [] 
  (box :orientation "v" :space-evenly "false" :class "sliders-side" 
    (box :orientation "h" :class "slider-vol-side" :space-evenly "false" 
      (box :class "label-vol-side" (button :onclick "pactl set-sink-mute 0 toggle" "${muted == 'no' ? '墳' : '婢'}"))
      (scale :class "slider-vol-side-s" :min 0 :max 101 :value volume :onchange "amixer -D pulse sset Master {}%")
      (box :class "label-bright-side" " ")
      (scale :class "slider-bright-side-s":min 0 :max 101 :value bright :onchange "~/.config/eww/scripts/setbri {}")
    )

    (box :orientation "h" :class "slider-bottom-container" :space-evenly "false"
      (box :orientation "v" :class "slider-stats"
        (stat_label :icon "CPU" :value "${cpu}%" :icon_class "label-cpu-side")
        (stat_label :icon "TMP" :value "${coretemp} °C" :icon_class "label-temp-side")
        (stat_label :icon "MEM" :value "${ram-used} MB" :icon_class "label-ram-side")
      )
      (box :orientation "v" :class "slider-bottom-right" :space-evenly "false"
        (box :orientation "h" :class "slider-wifi" :space-evenly "false"
          (box :class "${wifissid == "" ? 'slider-wifi-icon-off' : 'slider-wifi-icon'}" "${ wifissid == "" ? '睊' : '直'}")
          (box :class "${wifissid == "" ? 'slider-wifi-id-off' : 'slider-wifi-id'}" "${ wifissid == "" ? 'Disconnected' : wifissid}")
        )
        
        (box :orientation "h" :class "slider-uptime" :space-evenly "false"
          (box :class "slider-uptime-icon" "祥")
          (box :class "slider-uptime-content" uptime)
        )
      )
    )
  )
)

(defwidget sys_side [] 
    (box :orientation "h" :halign "center" :class "sysbtn" :space-evenly "true" 
      (button :class "shutdown-side" :onclick "~/.config/eww/scripts/shutdown.sh" "襤")
      (button :class "reboot-side" :onclick "~/.config/eww/scripts/reboot.sh" "累")
      (button :class "lock-side" :onclick "~/scripts/i3lock.sh" "")
      (button :class "suspend-side" :onclick "~/.config/eww/scripts/suspend.sh" "")
      (button :class "logout-side" :onclick "~/.config/eww/scripts/logout.sh" "")))

;;;;;;;;;;;;;;;
;; Variables ;;
;;;;;;;;;;;;;;;

(defvar control-panel false)

(defpoll ram-used :run-while control-panel :interval "2s"  "~/.config/eww/scripts/getram")
(defpoll coretemp :run-while control-panel :interval "2m"  "scripts/coretemp.sh")
(defpoll cpu :run-while control-panel :interval "2s" "scripts/getcpu")
(defpoll volume :run-while control-panel :interval "100ms" "~/.config/eww/scripts/getvol")
(defpoll muted :run-while control-panel :interval "100ms" "~/.config/eww/scripts/getmuted")
(defpoll bright :run-while control-panel :interval "100ms" "~/.config/eww/scripts/getbri")
(defpoll uptime :run-while control-panel :interval "1m" "scripts/getuptime")
(defpoll wifissid :run-while control-panel :interval "5s" "iwgetid -r")

;;;;;;;;;;;;;
;; Windows ;;
;;;;;;;;;;;;;

(defwindow sliders_side 
  :monitor 0
  :geometry (geometry :x "12px" :y "46px" :width "318px" :height "165px")
    (sliders_side))

(defwindow sys_side 
  :monitor 0
  :geometry (geometry :x "${1366 - 200 - 12}px" :y "45px" :width "200px" :height "40px")
    (sys_side))
